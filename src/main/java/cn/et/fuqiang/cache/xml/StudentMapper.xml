<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.et.fuqiang.cache.xml.MybatisCache">
	<!-- 配置二级缓存
	eviction 回收策略  默认为 LRU
			【默认】LRU——最近最少使用的：移除最长时间不被使用的对象 
			【新】LFU——最近一段时间使用次数最少的(部分版本不能使用)
	 		FIFO——先进先出的：按对象进入缓存的顺序来移除他们 
	 		SOFT——软引用：移除基于垃圾回收器状态和软引用规则的对象 
	 		WEAK——弱引用：更积极地移除基于垃圾收集器状态和弱引用规则的对象。
	flushInterval (刷新间隔)
			可以被设置为任意的正整数（60*60*1000这种形式是不允许的），而且它们代表一个合理的毫秒形式的时间段。
			默认情况是不设置，也就是没有刷新间隔，缓存仅仅调用语句时刷新。 
	size (引用数目)
			可以被设置为任意正整数，要记住你缓存的对象数目和你运行环境的可用内存资源数目。默认值是1024.
	readOnly (只读)
			属性可以被设置为true或false。只读的缓存会给所有调用者返回缓存对象的相同实例，因此这些对象不能被修改，这提供了很重要的性能优势。可读写的缓存会返回缓存对象的拷贝（通过发序列化）。这会慢一些，但是安全，因此默认是false。
	type=""  自定义缓存的类
			自定义缓存需要实现cache接口,并且重写其中的方法，就可以使用第三方缓存了
	 -->
	<cache eviction="FIFO" flushInterval="10800000" size="512" readOnly="true" type="cn.et.fuqiang.cache.xml.RedisCache"></cache>
	<select id="queryStudentById" resultType="student" >
		select * from student where stuid=#{0}
	</select>
	<update id="updateStudent" >
		update student set stuname=#{stuname},gid=#{gid} where stuid=#{stuid}
	</update>
</mapper>